{"version":3,"sources":["Firebase.js","Post.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Post","postId","user","username","caption","imageUrl","useState","comments","setComments","comment","setComment","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","unsubscribe","className","Avatar","src","alt","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","alert","message","child","getDownloadURL","then","url","catch","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setPosts","open","setOpen","setUsername","email","setEmail","newPassword","setNewPassword","passOpen","setPassOpen","password","setPassword","newName","setNewName","setUser","openRename","setOpenRename","openSignIn","setOpenSignIn","onAuthStateChanged","authUser","console","log","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","signInWithEmailAndPassword","updatePassword","val","signOut","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16b689b6.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n        apiKey: \"AIzaSyB-SwLppEaG8N89i7KfBMkUayLrMBJkLyY\",\r\n        authDomain: \"insta-clone-ee345.firebaseapp.com\",\r\n        databaseURL: \"https://insta-clone-ee345.firebaseio.com\",\r\n        projectId: \"insta-clone-ee345\",\r\n        storageBucket: \"insta-clone-ee345.appspot.com\",\r\n        messagingSenderId: \"922283294219\",\r\n        appId: \"1:922283294219:web:219d228c6498ef8201110e\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport {db, auth, storage};","import React, { useState, useEffect } from 'react'\r\nimport './Post.css'\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport { db } from './Firebase';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nfunction Post({ postId, user, username, caption, imageUrl }) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState(['']);\r\n\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n            const unsubscribe = db.collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .orderBy('timestamp', 'desc')\r\n                .onSnapshot((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => doc.data()));\r\n                });\r\n        }\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, [postId])\r\n\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\")\r\n            .add({\r\n                text: comment,\r\n                username: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n            });\r\n        setComment('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar\r\n                    className=\"post__avatar\"\r\n                    src=\"\"\r\n                    alt=\"Akhilesh\"\r\n                />\r\n                <h3>{username}</h3>\r\n            </div>\r\n\r\n            <img className=\"post__image\" src={imageUrl} alt=\"\" />\r\n            <h4 className=\"post__text\"><strong>{username}</strong> {caption}</h4>\r\n\r\n            <div className=\"post__comments\">\r\n                {\r\n                    comments.map((comment) => (\r\n                        <p>\r\n                            <strong> {comment.username} </strong> {comment.text}\r\n                        </p>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            {user && (\r\n                <form className=\"post__commentBox\">\r\n                    <input\r\n                        className=\"post__input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Add a comment..\"\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n\r\n                    <button\r\n                        className=\"post__button\"\r\n                        disabled={!comment}\r\n                        type=\"submit\"\r\n                        onClick={postComment}>\r\n                        Post\r\n                    </button>\r\n                </form>\r\n            )}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, {useState} from 'react';\r\nimport { Button} from '@material-ui/core';\r\nimport {db,storage} from './Firebase';\r\nimport firebase from \"firebase\";\r\nimport './ImageUpload.css'\r\n\r\nfunction ImageUpload({username}) {\r\n\r\n    const [caption, setCaption] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleChange = (e) =>{\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(\"images/\"+image.name).put(image);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                setProgress(progress);\r\n            },\r\n            (error) => {\r\n                alert(error.message);\r\n            },\r\n\r\n            () => {\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    db.collection(\"posts\").add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageUrl: url,\r\n                        username: username\r\n                    });\r\n\r\n                    setProgress(0);\r\n                    setCaption(\"\");\r\n                    setImage(null);\r\n                })\r\n                .catch((error) => alert(error.message));\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageUpload\">\r\n            <progress className=\"imageUpload__progress\" value={progress} max=\"100\"/>\r\n            <input type=\"text\" placeholder=\"caption\" onChange={event => setCaption(event.target.value)} value={caption}/>\r\n            <input type=\"file\" onChange={handleChange}/>\r\n            <Button onClick={handleUpload}>Upload</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Post from \"./Post\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { db, auth } from \"./Firebase\";\r\nimport { Button, Input } from \"@material-ui/core\";\r\nimport ImageUpload from \"./ImageUpload\";\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [posts, setPosts] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [passOpen, setPassOpen] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [openRename, setOpenRename] = useState(false);\r\n  const [openSignIn, setOpenSignIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        console.log(authUser);\r\n        setUser(authUser);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [user, username]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            post: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const signUp = (event) => {\r\n    event.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (val) => {\r\n    if (val === \"updatePassword\") {\r\n      setPassOpen(true);\r\n    }\r\n    if (val === \"rename\") {\r\n      setOpenRename(true);\r\n    }\r\n    if (val === \"logout\") {\r\n      auth.signOut();\r\n    }\r\n  }\r\n\r\n  const updateUsername = (event) => {\r\n    event.preventDefault();\r\n    user.updateProfile({\r\n      displayName: newName,\r\n    }).then(function () {\r\n      alert('Username updated!');\r\n    }).catch(function (error) {\r\n      alert(error);\r\n    });\r\n    setOpenRename(false);\r\n    setUsername(newName);\r\n  }\r\n\r\n\r\n  const resetPassword = (event) => {\r\n    event.preventDefault();\r\n    user.updatePassword(newPassword).then(function () {\r\n      alert('Password Changed successfully!')\r\n    }).catch(function (error) {\r\n      alert(error);\r\n    });\r\n    setPassOpen(false);\r\n  }\r\n\r\n  const signIn = (event) => {\r\n    event.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n    setOpenSignIn(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"App__signup\">\r\n            <center>\r\n              <img\r\n                className=\"App__headerImage\"\r\n                src=\"https://www.edigitalagency.com.au/wp-content/uploads/instagram-logo-text-black-png.png\"\r\n                alt=\"\"\r\n              />\r\n            </center>\r\n            <Input\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              type=\"text\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              type=\"text\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={signUp}>Register</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"App__signup\">\r\n            <center>\r\n              <img\r\n                className=\"App__headerImage\"\r\n                src=\"https://www.edigitalagency.com.au/wp-content/uploads/instagram-logo-text-black-png.png\"\r\n                alt=\"\"\r\n              />\r\n            </center>\r\n            <Input\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              type=\"text\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              type=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={signIn}>Login</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={passOpen} onClose={() => setPassOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"App__signup\">\r\n            <center>\r\n              <img\r\n                className=\"App__headerImage\"\r\n                src=\"https://www.edigitalagency.com.au/wp-content/uploads/instagram-logo-text-black-png.png\"\r\n                alt=\"\"\r\n              />\r\n            </center>\r\n            <Input\r\n              placeholder=\"New Password\"\r\n              value={newPassword}\r\n              type=\"password\"\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n            <Button onClick={resetPassword}>Update</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={openRename} onClose={() => setOpenRename(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"App__signup\">\r\n            <center>\r\n              <img\r\n                className=\"App__headerImage\"\r\n                src=\"https://www.edigitalagency.com.au/wp-content/uploads/instagram-logo-text-black-png.png\"\r\n                alt=\"\"\r\n              />\r\n            </center>\r\n            <Input\r\n              placeholder=\"New Username\"\r\n              value={newName}\r\n              type=\"text\"\r\n              onChange={(e) => setNewName(e.target.value)}\r\n            />\r\n            <Button onClick={updateUsername}>Update</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n\r\n      <div className=\"App__header\">\r\n        <img\r\n          className=\"App__headerImage\"\r\n          src=\"https://www.edigitalagency.com.au/wp-content/uploads/instagram-logo-text-black-png.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        {user ? (\r\n          <div className='App__dropDown'>\r\n            {/* <Button onClick={() => auth.signOut()}>{`${user.displayName}, Logout`}</Button> */}\r\n            <select onChange={(e) => handleChange(e.target.value)}>\r\n              <option value=\"name\">Welcome, {`${user.displayName}`}</option>\r\n              <option value=\"rename\"> Update username</option>\r\n              <option value=\"updatePassword\">Update password</option>\r\n              <option value=\"logout\">Logout</option>\r\n            </select>\r\n          </div>\r\n        ) : (\r\n            <div className=\"app__loginController\">\r\n              <Button onClick={() => setOpenSignIn(true)}>Login</Button>\r\n              <Button onClick={() => setOpen(true)}>Sign In</Button>\r\n            </div>\r\n          )}\r\n      </div>\r\n\r\n      <div className=\"App__posts\">\r\n        <div className=\"App__postsLeft\">\r\n          {posts.map(({ id, post }) => (\r\n            <Post\r\n              key={id}\r\n              postId={id}\r\n              user={user}\r\n              username={post.username}\r\n              caption={post.caption}\r\n              imageUrl={post.imageUrl}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* <div className=\"App__postsRight\">\r\n          <InstagramEmbed\r\n            url=\"\"\r\n            maxWidth={320}\r\n            hideCaption={false}\r\n            containerTagName=\"div\"\r\n            protocol=\"\"\r\n            injectScript\r\n            onLoading={() => {}}\r\n            onSuccess={() => {}}\r\n            onAfterRender={() => {}}\r\n            onFailure={() => {}}\r\n          />\r\n        </div> */}\r\n      </div>\r\n\r\n      {user?.displayName ? (\r\n        <ImageUpload username={user.displayName} />\r\n      ) : (\r\n          <h3>Login to upload and comment.</h3>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}